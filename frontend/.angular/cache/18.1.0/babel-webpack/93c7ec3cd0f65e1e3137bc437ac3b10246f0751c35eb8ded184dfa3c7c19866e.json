{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"completed\": a0\n});\nfunction AppComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function AppComponent_li_8_Template_input_change_1_listener() {\n      const todo_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleCompleted(todo_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_8_Template_button_click_4_listener() {\n      const todo_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteTodo(todo_r2.id));\n    });\n    i0.ɵɵtext(5, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", todo_r2.completed);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"completed\", i0.ɵɵpureFunction1(4, _c0, todo_r2.completed));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(todo_r2.text);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.title = 'frontend';\n      this.todos = [];\n      this.newTodoText = '';\n    }\n    ngOnInit() {\n      this.loadTasks();\n    }\n    loadTasks() {\n      try {\n        this.apiService.getAllTasks().subscribe(results => {\n          if (results && results.length > 0) {\n            this.todos.push(...results);\n          }\n        });\n      } catch (error) {\n        console.error('Failed to load tasks:', error);\n      }\n    }\n    addTodo() {\n      try {\n        if (this.newTodoText.trim() !== '') {\n          this.apiService.getLastId().subscribe(lastId => {\n            const newTodo = {\n              id: lastId + 1,\n              // Bu id API tarafından atanacak\n              text: this.newTodoText,\n              completed: false\n            };\n            this.apiService.addTask(newTodo).subscribe(() => {\n              this.todos.push(newTodo);\n              // Formu temizle\n            });\n            this.newTodoText = '';\n          });\n        }\n      } catch (error) {\n        console.error('Failed to add task:', error);\n      }\n    }\n    toggleCompleted(id) {\n      try {\n        const todo = this.todos.find(t => t.id === id);\n        if (todo) {\n          const updatedTodo = {\n            ...todo,\n            completed: !todo.completed\n          };\n          this.apiService.updateTask(id, updatedTodo);\n          todo.completed = !todo.completed;\n        }\n      } catch (error) {\n        console.error('Failed to update task:', error);\n      }\n    }\n    deleteTodo(id) {\n      try {\n        this.apiService.deleteTask(id);\n        this.todos = this.todos.filter(t => t.id !== id);\n      } catch (error) {\n        console.error('Failed to delete task:', error);\n      }\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 9,\n      vars: 2,\n      consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"newTodoText\", \"placeholder\", \"Add a new todo\", \"required\", \"\", 3, \"value\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"change\", \"value\"], [3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Todo List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.addTodo();\n          });\n          i0.ɵɵelement(4, \"input\", 1);\n          i0.ɵɵelementStart(5, \"button\", 2);\n          i0.ɵɵtext(6, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"ul\");\n          i0.ɵɵtemplate(8, AppComponent_li_8_Template, 6, 6, \"li\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.newTodoText);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i3.NgForOf, i2.NgForm],\n      styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}