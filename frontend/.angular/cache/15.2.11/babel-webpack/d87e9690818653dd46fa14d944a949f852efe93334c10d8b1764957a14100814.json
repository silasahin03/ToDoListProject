{"ast":null,"code":"import { ApiService } from '../services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nfunction AppComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function AppComponent_li_8_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleCompleted(todo_r1.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_8_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTodo(todo_r1.id));\n    });\n    i0.ɵɵtext(5, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"completed\", i0.ɵɵpureFunction1(3, _c0, todo_r1.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r1.text);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.title = 'frontend';\n      this.todos = [];\n      this.newTodoText = '';\n    }\n    ngOnInit() {\n      this.loadTasks();\n    }\n    loadTasks() {\n      try {\n        this.apiService.getAllTasks().subscribe(results => {\n          if (results && results.length > 0) {\n            this.todos.push(...results);\n          }\n        });\n      } catch (error) {\n        console.error('Failed to load tasks:', error);\n      }\n    }\n    addTodo() {\n      try {\n        if (this.newTodoText.trim() !== '') {\n          this.apiService.getLastId().subscribe(lastId => {\n            const newTodo = {\n              id: lastId + 1,\n              text: this.newTodoText,\n              completed: false\n            };\n            this.apiService.addTask(newTodo).subscribe(() => {\n              this.todos.push(newTodo);\n              // Formu temizle\n            });\n\n            this.newTodoText = '';\n          });\n        }\n      } catch (error) {\n        console.error('Failed to add task:', error);\n      }\n    }\n    toggleCompleted(id) {\n      try {\n        const todo = this.todos.find(t => t.id === id);\n        if (todo) {\n          const updatedTodo = {\n            ...todo,\n            completed: !todo.completed\n          };\n          this.apiService.updateTask(id, updatedTodo);\n          todo.completed = !todo.completed;\n        }\n      } catch (error) {\n        console.error('Failed to update task:', error);\n      }\n    }\n    deleteTodo(id) {\n      try {\n        this.apiService.deleteTask(id);\n        this.todos = this.todos.filter(t => t.id !== id);\n      } catch (error) {\n        console.error('Failed to delete task:', error);\n      }\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      features: [i0.ɵɵProvidersFeature([ApiService])],\n      decls: 9,\n      vars: 2,\n      consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"newTodoText\", \"placeholder\", \"Add a new todo\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"change\"], [3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Todo List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.addTodo();\n          });\n          i0.ɵɵelementStart(4, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.newTodoText = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 2);\n          i0.ɵɵtext(6, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"ul\");\n          i0.ɵɵtemplate(8, AppComponent_li_8_Template, 6, 5, \"li\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTodoText);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i3.NgForOf, i2.NgModel, i2.NgForm],\n      styles: [\".completed[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb21wbGV0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return AppComponent;\n})();","map":{"version":3,"mappings":"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","names":["ApiService","i0","AppComponent","constructor","apiService","ngOnInit","loadTasks","getAllTasks","subscribe","results","length","todos","push","error","console","addTodo","newTodoText","trim","getLastId","lastId","newTodo","id","text","completed","addTask","toggleCompleted","todo","find","t","updatedTodo","updateTask","deleteTodo","deleteTask","filter","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/sila/ToDoListProject/frontend/src/app/app.component.ts","/home/sila/ToDoListProject/frontend/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from './todo.model';\nimport { ApiService } from '../services/api.service';\nimport { firstValueFrom, } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ApiService]\n})\nexport class AppComponent implements OnInit{\n  \n  title = 'frontend';\n  todos: Todo[] = [];\n  newTodoText: string= ''\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.loadTasks();\n  }\n\n  loadTasks() {\n      try {\n        this.apiService.getAllTasks().subscribe((results) => {\n          if (results && results.length > 0) {\n            this.todos.push(...results);\n          }\n          });\n      } catch (error) {\n        console.error('Failed to load tasks:', error);\n      }\n    }\n  \n  addTodo() {\n      try {\n        if (this.newTodoText.trim() !== '') {\n          this.apiService.getLastId().subscribe(\n            (lastId: number) => {\n          const newTodo: Todo = {\n            id: lastId+1, // Bu id API tarafından atanacak\n            text: this.newTodoText,\n            completed: false\n          };\n        \n          this.apiService.addTask(newTodo).subscribe(() => {\n            this.todos.push(newTodo);\n           // Formu temizle\n          });\n            this.newTodoText = '';\n            });\n        }\n      } catch (error) {\n        console.error('Failed to add task:', error);\n      }\n  }\n  \n  toggleCompleted(id: number){\n      try {\n        const todo = this.todos.find(t => t.id === id);\n        if (todo) {\n          const updatedTodo = { ...todo, completed: !todo.completed };\n          this.apiService.updateTask(id, updatedTodo);\n          todo.completed = !todo.completed;\n        }\n      } catch (error) {\n        console.error('Failed to update task:', error);\n      }\n    }\n  \n  deleteTodo(id: number){\n      try {\n        this.apiService.deleteTask(id);\n        this.todos = this.todos.filter(t => t.id !== id);\n      } catch (error) {\n        console.error('Failed to delete task:', error);\n      }\n    }\n}\n","<div>\n  <h1>Todo List</h1>\n  \n  <form (ngSubmit)=\"addTodo()\">\n    <input type=\"text\" [(ngModel)]=\"newTodoText\" name=\"newTodoText\" placeholder=\"Add a new todo\" required>\n    <button type=\"submit\">Add</button>\n  </form>\n  \n  <ul>\n    <li *ngFor=\"let todo of todos\">\n      <input type=\"checkbox\" (change)=\"toggleCompleted(todo.id)\">\n      <span [class.completed]=\"{ 'completed': todo.completed }\">{{ todo.text }}</span>\n      <button (click)=\"deleteTodo(todo.id)\">Delete</button>\n    </li>\n  </ul>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}